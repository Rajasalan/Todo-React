{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Todo-List\\\\src\\\\Components\\\\Header\\\\TaskButtons.js\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport Box from '@material-ui/core/Box';\nimport AppDialogBox from '../Dialogs/DialogBox';\nimport Category from '../../Models/Category';\nimport MenuEnter from '../MenuEnter';\nimport MenuLeave from '../MenuLeave';\nimport useStyles from '../MainCss';\n/**\n * TaskButtons displays all category and colors\n *\n * @returns   AppDialogBox\n * @method addTaskButton\n * @method addCategory\n * @method buttonItems // This  function displays all category name\n * @method colorItems  // This  function displays different label color in dialog box\n * onClick={addCategory} this function is used to add new category and the color code when Add category button is clicked\n */\n\nexport default function TaskButtons() {\n  const classes = useStyles();\n  /** Main css */\n\n  const [open, setOpen] = useState(false);\n  const [newTask, setNewTask] = useState('');\n  const [newColor, setNewColor] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addTaskButton = () => {\n    return /*#__PURE__*/React.createElement(Button, {\n      className: classes.margin,\n      onClick: addCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, \"Add Category\");\n  };\n\n  const addCategory = () => {\n    var metadata = {\n      Name: newTask,\n      Color: newColor\n    };\n    Category.push(metadata);\n    setOpen(false);\n  };\n\n  const buttonItems = Category.map(Item => /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      width: '25%'\n    },\n    menucolor: Item.Color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.ButtonBackground,\n    style: {\n      backgroundColor: Item.Color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.CategoryMenu,\n    menuColor: Item.Color,\n    onMouseEnter: MenuEnter,\n    onMouseLeave: MenuLeave,\n    onClick: handleClickOpen,\n    id: Item.Name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, Item.Name))));\n  const colorItems = Category.map(Item => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.TaskMenuColor,\n    style: {\n      backgroundColor: Item.Color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, ' ')));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\",\n    alignItem: \"space-evenly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, buttonItems, /*#__PURE__*/React.createElement(AddIcon, {\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(AppDialogBox, {\n    Title: \"Category\",\n    Open: open,\n    Margin: classes.margin,\n    HandleClose: handleClose,\n    AddButton: addTaskButton(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"txtCategory\",\n    onChange: e => setNewTask(e.target.value),\n    label: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"txtColor\",\n    onChange: e => setNewColor(e.target.value),\n    label: \"Color Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, colorItems))))));\n}","map":{"version":3,"sources":["E:/React/Todo-List/src/Components/Header/TaskButtons.js"],"names":["React","useState","Button","FormControl","TextField","AddIcon","Box","AppDialogBox","Category","MenuEnter","MenuLeave","useStyles","TaskButtons","classes","open","setOpen","newTask","setNewTask","newColor","setNewColor","handleClickOpen","handleClose","addTaskButton","margin","addCategory","metadata","Name","Color","push","buttonItems","map","Item","width","ButtonBackground","backgroundColor","CategoryMenu","colorItems","TaskMenuColor","form","formControl","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport AddIcon from '@material-ui/icons/Add'\nimport Box from '@material-ui/core/Box'\nimport AppDialogBox from '../Dialogs/DialogBox'\nimport Category from '../../Models/Category'\nimport MenuEnter from '../MenuEnter'\nimport MenuLeave from '../MenuLeave'\nimport useStyles from '../MainCss'\n\n/**\n * TaskButtons displays all category and colors\n *\n * @returns   AppDialogBox\n * @method addTaskButton\n * @method addCategory\n * @method buttonItems // This  function displays all category name\n * @method colorItems  // This  function displays different label color in dialog box\n * onClick={addCategory} this function is used to add new category and the color code when Add category button is clicked\n */\n\nexport default function TaskButtons() {\n  const classes = useStyles() /** Main css */\n  const [open, setOpen] = useState(false)\n  const [newTask, setNewTask] = useState('')\n  const [newColor, setNewColor] = useState('')\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const addTaskButton = () => {\n    return (\n      <Button className={classes.margin} onClick={addCategory}>\n        Add Category\n      </Button>\n    )\n  }\n\n  const addCategory = () => {\n    var metadata = {\n      Name: newTask,\n      Color: newColor,\n    }\n    Category.push(metadata)\n    setOpen(false)\n  }\n\n  const buttonItems = Category.map(Item => (\n    <td style={{ width: '25%' }} menucolor={Item.Color}>\n      <div className={classes.ButtonBackground} style={{ backgroundColor: Item.Color }}></div>\n      <div\n        className={classes.CategoryMenu}\n        menuColor={Item.Color}\n        onMouseEnter={MenuEnter}\n        onMouseLeave={MenuLeave}\n        onClick={handleClickOpen}\n        id={Item.Name}\n      >\n        <span>{Item.Name}</span>\n      </div>\n    </td>\n  ))\n\n  const colorItems = Category.map(Item => (\n    <td>\n      <span className={classes.TaskMenuColor} style={{ backgroundColor: Item.Color }}>\n        {' '}\n      </span>\n    </td>\n  ))\n  return (\n    <div>\n      <div style={{ width: '100%' }}>\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" justifyContent=\"flex-start\" alignItem=\"space-evenly\">\n          {buttonItems}\n          <AddIcon onClick={handleClickOpen} />\n        </Box>\n      </div>\n      <AppDialogBox\n        Title=\"Category\"\n        Open={open}\n        Margin={classes.margin}\n        HandleClose={handleClose}\n        AddButton={addTaskButton()}\n      >\n        <form className={classes.form} noValidate>\n          <FormControl className={classes.formControl}>\n            <TextField id=\"txtCategory\" onChange={e => setNewTask(e.target.value)} label=\"Category\" />\n            <TextField id=\"txtColor\" onChange={e => setNewColor(e.target.value)} label=\"Color Code\" />\n            <table width=\"60%\">\n              <tr>{colorItems}</tr>\n            </table>\n          </FormControl>\n        </form>\n      </AppDialogBox>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}