{"ast":null,"code":"import React from'react';import Typography from'@material-ui/core/Typography';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import DeleteIcon from'@material-ui/icons/Delete';import Link from'@material-ui/core/Link';import useStyles from\"../MainCss\";/**\n * ToDoList displays all todo list item\n *\n * @returns   listItems // display all the task\n * @method IsCompleteItems // Used to check completed task\n * @method onDelete // used to delete the task\n * @method buttonItems // This  function displays all category name\n */export default function ToDoList(props){var classes=useStyles();var IsCompleteItems=function IsCompleteItems(todoItem){if(todoItem.completed===false){return/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"isCompleted\",value:todoItem.name,onClick:function onClick(){return props.onStatusChange(todoItem.id);}});}else return/*#__PURE__*/React.createElement(\"div\",null,\"\\xA0\\xA0\\xA0\\xA0\");};var listItems=props.Items.map(function(Item){return/*#__PURE__*/React.createElement(ListItem,null,IsCompleteItems(Item),\"\\xA0\\xA0\",/*#__PURE__*/React.createElement(\"div\",{style:{width:\"14px\",height:'14px',backgroundColor:Item.Color}},\" \"),\"\\xA0\\xA0 \",/*#__PURE__*/React.createElement(\"span\",{style:{fontSize:'14px',fontFamily:'Arial'}},\" \",Item.name),\" \\xA0\\xA0\",/*#__PURE__*/React.createElement(Link,{onClick:function onClick(){return props.onDelete(Item.id);},style:{textDecoration:'none',color:'grey'}},/*#__PURE__*/React.createElement(DeleteIcon,{style:{fontSize:'18px'}})));});return/*#__PURE__*/React.createElement(Typography,{component:\"div\",className:classes.DivTasksList},/*#__PURE__*/React.createElement(List,{className:classes.Listroot},listItems));}","map":{"version":3,"sources":["E:/React/Todo-List/src/Components/List/TodoList.js"],"names":["React","Typography","List","ListItem","DeleteIcon","Link","useStyles","ToDoList","props","classes","IsCompleteItems","todoItem","completed","name","onStatusChange","id","listItems","Items","map","Item","width","height","backgroundColor","Color","fontSize","fontFamily","onDelete","textDecoration","color","DivTasksList","Listroot"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA;;;;;;;GASA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACpC,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CAEA,GAAMI,CAAAA,eAAe,CAAE,QAAjBA,CAAAA,eAAiB,CAACC,QAAD,CAAY,CAC/B,GAAGA,QAAQ,CAACC,SAAT,GAAuB,KAA1B,CACA,CACI,mBAAO,6BAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,aAAzB,CAAuC,KAAK,CAAED,QAAQ,CAACE,IAAvD,CAA6D,OAAO,CAAE,yBAAIL,CAAAA,KAAK,CAACM,cAAN,CAAqBH,QAAQ,CAACI,EAA9B,CAAJ,EAAtE,EAAP,CACH,CAHD,IAKA,oBAAQ,kDAAR,CAEH,CARD,CAUA,GAAMC,CAAAA,SAAS,CAACR,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,qBAChC,oBAAC,QAAD,MACIT,eAAe,CAACS,IAAD,CADnB,yBAGG,2BAAK,KAAK,CAAE,CAACC,KAAK,CAAC,MAAP,CAAcC,MAAM,CAAC,MAArB,CAA4BC,eAAe,CAACH,IAAI,CAACI,KAAjD,CAAZ,MAHH,0BAG4F,4BAAM,KAAK,CAAE,CAACC,QAAQ,CAAC,MAAV,CAAiBC,UAAU,CAAC,OAA5B,CAAb,MAAqDN,IAAI,CAACN,IAA1D,CAH5F,0BAII,oBAAC,IAAD,EAAM,OAAO,CAAE,yBAAIL,CAAAA,KAAK,CAACkB,QAAN,CAAeP,IAAI,CAACJ,EAApB,CAAJ,EAAf,CAA4C,KAAK,CAAE,CAACY,cAAc,CAAC,MAAhB,CAAuBC,KAAK,CAAC,MAA7B,CAAnD,eAAyF,oBAAC,UAAD,EAAY,KAAK,CAAE,CAACJ,QAAQ,CAAC,MAAV,CAAnB,EAAzF,CAJJ,CADgC,EAAhB,CAAhB,CASJ,mBACI,oBAAC,UAAD,EAAY,SAAS,CAAC,KAAtB,CAA4B,SAAS,CAAEf,OAAO,CAACoB,YAA/C,eACA,oBAAC,IAAD,EAAM,SAAS,CAAEpB,OAAO,CAACqB,QAAzB,EACKd,SADL,CADA,CADJ,CAOC","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Link from '@material-ui/core/Link';\nimport useStyles from \"../MainCss\";\n\n/**\n * ToDoList displays all todo list item\n *\n * @returns   listItems // display all the task\n * @method IsCompleteItems // Used to check completed task\n * @method onDelete // used to delete the task\n * @method buttonItems // This  function displays all category name\n */\n\nexport default function ToDoList(props) {\n    const classes = useStyles();\n\n    const IsCompleteItems=((todoItem)=>{\n        if(todoItem.completed === false)\n        {\n            return(<input type=\"radio\" name=\"isCompleted\" value={todoItem.name} onClick={()=>props.onStatusChange(todoItem.id)}></input>)\n        }\n        else\n        return (<div>&nbsp;&nbsp;&nbsp;&nbsp;</div>);\n\n    })\n\n    const listItems=props.Items.map((Item)=>\n    <ListItem>\n       {IsCompleteItems(Item)}\n       &nbsp;&nbsp;\n       <div style={{width:\"14px\",height:'14px',backgroundColor:Item.Color}}> </div>&nbsp;&nbsp; <span style={{fontSize:'14px',fontFamily:'Arial'}}> {Item.name}</span> &nbsp;&nbsp;\n        <Link onClick={()=>props.onDelete(Item.id)} style={{textDecoration:'none',color:'grey'}}><DeleteIcon style={{fontSize:'18px'}} /></Link>\n    </ListItem>  \n    );\n\nreturn (\n    <Typography component=\"div\" className={classes.DivTasksList} >\n    <List className={classes.Listroot}> \n        {listItems}\n    </List>\n    </Typography>\n)   \n}\n"]},"metadata":{},"sourceType":"module"}