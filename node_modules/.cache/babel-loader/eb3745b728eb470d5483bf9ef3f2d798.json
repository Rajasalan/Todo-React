{"ast":null,"code":"import _slicedToArray from\"E:\\\\React\\\\Todo-List\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Button from'@material-ui/core/Button';import FormControl from'@material-ui/core/FormControl';import TextField from'@material-ui/core/TextField';import AddIcon from'@material-ui/icons/Add';import Box from'@material-ui/core/Box';import AppDialogBox from'../Dialogs/DialogBox';import Category from'../../Models/Category';import MenuEnter from'../MenuEnter';import MenuLeave from'../MenuLeave';import useStyles from'../MainCss';/**\n * TaskButtons displays all category and colors\n *\n * @returns   AppDialogBox\n * @method addTaskButton\n * @method addCategory\n * @method buttonItems // This  function displays all category name\n * @method colorItems  // This  function displays different label color in dialog box\n * onClick={addCategory} this function is used to add new category and the color code when Add category button is clicked\n */export default function TaskButtons(){var classes=useStyles();/** Main css */var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newTask=_useState4[0],setNewTask=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newColor=_useState6[0],setNewColor=_useState6[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var addTaskButton=function addTaskButton(){return/*#__PURE__*/React.createElement(Button,{className:classes.margin,onClick:addCategory},\"Add Category\");};var addCategory=function addCategory(){var metadata={Name:newTask,Color:newColor};Category.push(metadata);setOpen(false);};var buttonItems=Category.map(function(Item){return/*#__PURE__*/React.createElement(\"td\",{style:{width:'25%'},menucolor:Item.Color},/*#__PURE__*/React.createElement(\"div\",{className:classes.ButtonBackground,style:{backgroundColor:Item.Color}}),/*#__PURE__*/React.createElement(\"div\",{className:classes.CategoryMenu,menuColor:Item.Color,onMouseEnter:MenuEnter,onMouseLeave:MenuLeave,onClick:handleClickOpen,id:Item.Name},/*#__PURE__*/React.createElement(\"span\",null,Item.Name)));});var colorItems=Category.map(function(Item){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:classes.TaskMenuColor,style:{backgroundColor:Item.Color}},' '));});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%'}},/*#__PURE__*/React.createElement(Box,{display:\"flex\",flexDirection:\"row\",flexWrap:\"wrap\",justifyContent:\"flex-start\",alignItem:\"space-evenly\"},buttonItems,/*#__PURE__*/React.createElement(AddIcon,{onClick:handleClickOpen}))),/*#__PURE__*/React.createElement(AppDialogBox,{Title:\"Category\",Open:open,Margin:classes.margin,HandleClose:handleClose,AddButton:addTaskButton()},/*#__PURE__*/React.createElement(\"form\",{className:classes.form,noValidate:true},/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl},/*#__PURE__*/React.createElement(TextField,{id:\"txtCategory\",onChange:function onChange(e){return setNewTask(e.target.value);},label:\"Category\"}),/*#__PURE__*/React.createElement(TextField,{id:\"txtColor\",onChange:function onChange(e){return setNewColor(e.target.value);},label:\"Color Code\"}),/*#__PURE__*/React.createElement(\"table\",{width:\"60%\"},/*#__PURE__*/React.createElement(\"tr\",null,colorItems))))));}","map":{"version":3,"sources":["E:/React/Todo-List/src/Components/Header/TaskButtons.js"],"names":["React","useState","Button","FormControl","TextField","AddIcon","Box","AppDialogBox","Category","MenuEnter","MenuLeave","useStyles","TaskButtons","classes","open","setOpen","newTask","setNewTask","newColor","setNewColor","handleClickOpen","handleClose","addTaskButton","margin","addCategory","metadata","Name","Color","push","buttonItems","map","Item","width","ButtonBackground","backgroundColor","CategoryMenu","colorItems","TaskMenuColor","form","formControl","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport AddIcon from '@material-ui/icons/Add'\nimport Box from '@material-ui/core/Box'\nimport AppDialogBox from '../Dialogs/DialogBox'\nimport Category from '../../Models/Category'\nimport MenuEnter from '../MenuEnter'\nimport MenuLeave from '../MenuLeave'\nimport useStyles from '../MainCss'\n\n/**\n * TaskButtons displays all category and colors\n *\n * @returns   AppDialogBox\n * @method addTaskButton\n * @method addCategory\n * @method buttonItems // This  function displays all category name\n * @method colorItems  // This  function displays different label color in dialog box\n * onClick={addCategory} this function is used to add new category and the color code when Add category button is clicked\n */\n\nexport default function TaskButtons() {\n  const classes = useStyles() /** Main css */\n  const [open, setOpen] = useState(false)\n  const [newTask, setNewTask] = useState('')\n  const [newColor, setNewColor] = useState('')\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const addTaskButton = () => {\n    return (\n      <Button className={classes.margin} onClick={addCategory}>\n        Add Category\n      </Button>\n    )\n  }\n\n  const addCategory = () => {\n    var metadata = {\n      Name: newTask,\n      Color: newColor,\n    }\n    Category.push(metadata)\n    setOpen(false)\n  }\n\n  const buttonItems = Category.map(Item => (\n    <td style={{ width: '25%' }} menucolor={Item.Color}>\n      <div className={classes.ButtonBackground} style={{ backgroundColor: Item.Color }}></div>\n      <div\n        className={classes.CategoryMenu}\n        menuColor={Item.Color}\n        onMouseEnter={MenuEnter}\n        onMouseLeave={MenuLeave}\n        onClick={handleClickOpen}\n        id={Item.Name}\n      >\n        <span>{Item.Name}</span>\n      </div>\n    </td>\n  ))\n\n  const colorItems = Category.map(Item => (\n    <td>\n      <span className={classes.TaskMenuColor} style={{ backgroundColor: Item.Color }}>\n        {' '}\n      </span>\n    </td>\n  ))\n  return (\n    <div>\n      <div style={{ width: '100%' }}>\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" justifyContent=\"flex-start\" alignItem=\"space-evenly\">\n          {buttonItems}\n          <AddIcon onClick={handleClickOpen} />\n        </Box>\n      </div>\n      <AppDialogBox\n        Title=\"Category\"\n        Open={open}\n        Margin={classes.margin}\n        HandleClose={handleClose}\n        AddButton={addTaskButton()}\n      >\n        <form className={classes.form} noValidate>\n          <FormControl className={classes.formControl}>\n            <TextField id=\"txtCategory\" onChange={e => setNewTask(e.target.value)} label=\"Category\" />\n            <TextField id=\"txtColor\" onChange={e => setNewColor(e.target.value)} label=\"Color Code\" />\n            <table width=\"60%\">\n              <tr>{colorItems}</tr>\n            </table>\n          </FormControl>\n        </form>\n      </AppDialogBox>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}