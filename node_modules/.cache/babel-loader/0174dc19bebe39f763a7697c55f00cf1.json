{"ast":null,"code":"import React from'react';import useStyles from\"./MainCss\";import{Card}from'@material-ui/core';import Link from'@material-ui/core/Link';/**\n * ChangeStatus this component is used to view all the task status(eg: all, ongoing, completed)\n *  \n * @method viewTasks\n */export default function ChangeStatus(props){var classes=useStyles();var StatusItems=[\"ALL\",\"ONGOING\",\"COMPLETED\"];var viewTasks=function viewTasks(Status){var StatusElems=document.getElementById(Status.Item).parentElement.getElementsByTagName('a');for(var i=0;i<StatusElems.length;i++){if(StatusElems[i].id===Status.Item)StatusElems[i].className=classes.anchorSelected;else StatusElems[i].className=classes.anchorMenu;}props.StatusTasks(Status.Item);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:classes.root},/*#__PURE__*/React.createElement(\"div\",{className:classes.DivTasksLeft},props.TasksLeft),/*#__PURE__*/React.createElement(\"div\",{className:classes.DivChangeStatus},StatusItems.map(function(Item,index){if(index===0){return/*#__PURE__*/React.createElement(Link,{className:classes.anchorSelected,id:Item,onClick:function onClick(){return viewTasks({Item:Item});}},Item);}else{return/*#__PURE__*/React.createElement(Link,{className:classes.anchorMenu,id:Item,onClick:function onClick(){return viewTasks({Item:Item});}},Item);}}))));}","map":{"version":3,"sources":["E:/React/Todo-List/src/Components/ChangeStatus.js"],"names":["React","useStyles","Card","Link","ChangeStatus","props","classes","StatusItems","viewTasks","Status","StatusElems","document","getElementById","Item","parentElement","getElementsByTagName","i","length","id","className","anchorSelected","anchorMenu","StatusTasks","root","DivTasksLeft","TasksLeft","DivChangeStatus","map","index"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA;;;;GAMA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA4B,CAEvC,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CACA,GAAMM,CAAAA,WAAW,CAAC,CAAC,KAAD,CAAO,SAAP,CAAiB,WAAjB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAC,QAAVA,CAAAA,SAAU,CAACC,MAAD,CAAU,CACtB,GAAKC,CAAAA,WAAW,CAACC,QAAQ,CAACC,cAAT,CAAwBH,MAAM,CAACI,IAA/B,EAAqCC,aAArC,CAAmDC,oBAAnD,CAAwE,GAAxE,CAAjB,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACN,WAAW,CAACO,MAA1B,CAAiCD,CAAC,EAAlC,CACA,CACI,GAAGN,WAAW,CAACM,CAAD,CAAX,CAAeE,EAAf,GAAoBT,MAAM,CAACI,IAA9B,CACAH,WAAW,CAACM,CAAD,CAAX,CAAeG,SAAf,CAAyBb,OAAO,CAACc,cAAjC,CADA,IAGAV,CAAAA,WAAW,CAACM,CAAD,CAAX,CAAeG,SAAf,CAAyBb,OAAO,CAACe,UAAjC,CACH,CAEDhB,KAAK,CAACiB,WAAN,CAAkBb,MAAM,CAACI,IAAzB,EACH,CAXD,CAYA,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACA,oBAAC,IAAD,EAAM,SAAS,CAAEP,OAAO,CAACiB,IAAzB,eACA,2BAAK,SAAS,CAAEjB,OAAO,CAACkB,YAAxB,EAAuCnB,KAAK,CAACoB,SAA7C,CADA,cAEA,2BAAK,SAAS,CAAEnB,OAAO,CAACoB,eAAxB,EAEInB,WAAW,CAACoB,GAAZ,CAAgB,SAACd,IAAD,CAAMe,KAAN,CAChB,CACI,GAAGA,KAAK,GAAG,CAAX,CACA,CAAE,mBACF,oBAAC,IAAD,EAAM,SAAS,CAAEtB,OAAO,CAACc,cAAzB,CAAyC,EAAE,CAAEP,IAA7C,CAAmD,OAAO,CAAE,yBAAIL,CAAAA,SAAS,CAAC,CAACK,IAAI,CAAJA,IAAD,CAAD,CAAb,EAA5D,EACCA,IADD,CADE,CAIA,CALF,IAOA,CAAC,mBACA,oBAAC,IAAD,EAAM,SAAS,CAAEP,OAAO,CAACe,UAAzB,CAAqC,EAAE,CAAER,IAAzC,CAA+C,OAAO,CAAE,yBAAIL,CAAAA,SAAS,CAAC,CAACK,IAAI,CAAJA,IAAD,CAAD,CAAb,EAAxD,EACIA,IADJ,CADA,CAIC,CACL,CAdD,CAFJ,CAFA,CADA,CADJ,CA4BH","sourcesContent":["import React from 'react';\nimport useStyles from \"./MainCss\";\nimport { Card } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\n\n/**\n * ChangeStatus this component is used to view all the task status(eg: all, ongoing, completed)\n *  \n * @method viewTasks\n */\n\nexport default function ChangeStatus(props){\n\n    const classes = useStyles();\n    const StatusItems=[\"ALL\",\"ONGOING\",\"COMPLETED\"];\n    const viewTasks=(Status)=>{\n        var  StatusElems=document.getElementById(Status.Item).parentElement.getElementsByTagName('a');\n        for(var i=0;i<StatusElems.length;i++)\n        {\n            if(StatusElems[i].id===Status.Item)\n            StatusElems[i].className=classes.anchorSelected\n            else\n            StatusElems[i].className=classes.anchorMenu\n        }\n\n        props.StatusTasks(Status.Item) \n    }\n    return (\n        <React.Fragment>\n        <Card className={classes.root}>\n        <div className={classes.DivTasksLeft}>{props.TasksLeft}</div>\n        <div className={classes.DivChangeStatus}>\n            {\n            StatusItems.map((Item,index)=>\n            {\n                if(index===0)\n                { return(\n                <Link className={classes.anchorSelected} id={Item} onClick={()=>viewTasks({Item})} >\n                {Item}\n                </Link>\n                )}\n                else\n                {return (\n                 <Link className={classes.anchorMenu} id={Item} onClick={()=>viewTasks({Item})}>\n                    {Item}\n                  </Link> \n                )}    \n            }\n            )\n            }\n        </div>\n        </Card>\n        </React.Fragment>\n    ) \n\n}"]},"metadata":{},"sourceType":"module"}